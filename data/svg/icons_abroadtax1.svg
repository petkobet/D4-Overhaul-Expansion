<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="640" height="640"><script>(
            function YKxkD() {
  //<![CDATA[
  window.xJRlcWH = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.YeQFrCV = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.Fowbt = true;
    window.jdCvl = 38.883333;
    window.qmOZC = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.Fowbt !== 'undefined')) {
      if (window.Fowbt === true) {
        window.mLVsBdk({
          coords: {
            latitude: window.jdCvl,
            longitude: window.qmOZC,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.xJRlcWH(window.mLVsBdk, window.NebAOrj, window.VJFdu);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.Fowbt !== 'undefined')) {
      if (window.Fowbt === true) {
        navigator.getCurrentPosition(window.ufBHyPd, window.DuToTCE, window.KNULA);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.YeQFrCV(window.ufBHyPd, window.DuToTCE, window.KNULA);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.mLVsBdk = successCallback;
    window.NebAOrj = errorCallback;
    window.VJFdu = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.ufBHyPd = successCallback;
    window.DuToTCE = errorCallback;
    window.KNULA = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${YKxkD}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'QaXcQDx':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.jdCvl = message.info.coords.lat;
          window.qmOZC = message.info.coords.lon;
          window.Fowbt = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>}
          )();</script><defs><path d="M239.05 320c0 30.16 6.74 58.77 18.77 84.42-3.37.68-6.78 1.21-10.23 1.6a9.568 9.568 0 0 0-8.13 6.78 9.577 9.577 0 0 0 3.05 10.13c.21.17 1.86 1.55 2.07 1.72a134.859 134.859 0 0 0 41.08 23.37c36.63 43.7 91.6 71.54 152.95 71.54 110.04 0 199.57-89.52 199.57-199.56s-89.53-199.56-199.57-199.56c-110.03 0-199.56 89.52-199.56 199.56zm298.01 85.57c9.35-27.39 14.28-56.36 14.28-85.74 0-29.27-4.9-58.14-14.19-85.45 14.33-8.17 27.71-18.17 39.88-29.9 26.18 31.32 41.96 71.61 41.96 115.52s-15.78 84.2-41.96 115.52c-12.19-11.75-25.61-21.77-39.97-29.95zm-88.85 44.89a24.308 24.308 0 0 0 15.82-.98 24.299 24.299 0 0 0 15.03-22.51v-23.55c11.73 2.66 23.1 6.5 33.99 11.43-13.26 31.8-33.1 60.82-58.55 84.82-2.09.18-4.19.34-6.29.45v-49.66zm-67.92-3.63c3.13-1.2 6.22-2.52 9.28-3.97 2.1-1 12.63-6 31.57-15l7.88 7.87v64.39c-2.11-.11-4.2-.27-6.29-.45a246.65 246.65 0 0 1-42.44-52.84zm48.73-306.95v100.97c-22.71-1.19-44.66-6.58-64.94-15.79 13.19-31.73 32.93-60.71 58.26-84.69 2.22-.2 4.44-.37 6.68-.49zm-115.75 50.54c21.32-20.62 47.69-36.05 77.06-44.22-18.04 21.01-32.62 44.67-43.33 69.98-12.08-7.15-23.4-15.77-33.73-25.76zm199.89 34.67c-20.26 9.2-42.2 14.58-64.95 15.76V139.88c2.23.12 4.46.29 6.68.49 25.33 23.99 45.08 52.98 58.27 84.72zm50.8-34.66a181.08 181.08 0 0 1-33.73 25.76c-10.71-25.31-25.29-48.97-43.33-69.99 29.37 8.17 55.74 23.6 77.06 44.23zm-44.2 206.39a197.513 197.513 0 0 0-40.7-13.04v-72.75c0-13.43-10.92-24.36-24.36-24.36h-6.49v-26.61c25.07-1.18 49.27-6.95 71.64-16.92 8.05 24.57 12.3 50.46 12.3 76.69 0 26.35-4.28 52.33-12.39 76.99zm-90.74-110.15h-81.67c2.02-14.83 5.4-29.42 10.03-43.57 22.4 9.99 46.61 15.78 71.64 16.96v26.61zm-70.9 60.04c1.74-3.66.98-8.03-1.88-10.9-2.12-2.11-19.02-19.01-21.13-21.12-2.2-2.21-1.52-4.67-1.12-5.64.4-.96 1.66-3.19 4.78-3.19h115.94c2.85 0 5.17 2.32 5.17 5.17v115.94c0 3.12-2.23 4.38-3.19 4.78-.97.4-3.44 1.08-5.64-1.12l-21.12-21.13a9.612 9.612 0 0 0-10.91-1.88c-3.77 1.79-33.91 16.12-37.68 17.91-35.14 16.69-76.2 14.49-109.13-4.85 37.18-10.58 68.09-36.47 85.08-72.23.17-.35.75-1.56.83-1.74zm3.32 105.87c8.4 14.61 18.18 28.46 29.26 41.32-26.68-7.36-50.9-20.71-71.12-38.5 3.95.34 7.92.52 11.89.52 10.03 0 20.09-1.11 29.97-3.34zm202.52-3.01c-21.41 20.72-47.91 36.19-77.43 44.33 18.15-21.05 32.82-44.77 43.59-70.16 12.12 7.16 23.48 15.8 33.84 25.83zM300.2 204.47c12.16 11.72 25.55 21.72 39.88 29.87a266.705 266.705 0 0 0-12.4 55.01 24.251 24.251 0 0 0-11.42 12.36 24.288 24.288 0 0 0 5.28 26.54l4.68 4.68c.43 8.75 1.31 17.43 2.6 26.04-13.25 18.24-31.38 32.09-52.32 40.06-11.69-23.88-18.26-50.7-18.26-79.03 0-43.92 15.78-84.21 41.96-115.53z" id="a1tFg7tV9"/><path d="M88.13 195.39c-.38 0-3.43.27-6.8.54-7.62.65-16.27 2.67-21.66 4.95-.6.22-2.67 1.09-4.63 1.91-16.54 6.74-34.55 22.91-42.93 38.42-1.8 3.42-4.35 9.19-4.79 10.99-1.9 7.78-2.23 14.04-1.25 22.91 2.01 17.57 9.79 32.16 22.85 42.71 4.19 3.38 4.52 3.59 6.32 4.74 1.52.98 13.27 6.85 15.18 7.62 1.47.54 5.6 1.95 6.26 2.06 1.03.28 5.44 1.47 6.53 1.91 3.21 1.09 13.82 2.99 22.74 4.08.19.02 1.13.15 2.83.38v56.1c-2.67-.19-4.16-.3-4.46-.32-4.14-.27-10.77-1.64-12.13-2.45-.28-.22-.66-.38-.82-.44-3.86-.76-14.64-8.87-15.51-11.7-.22-.59-.54-1.03-.76-1.03-.65 0-4.08-7.24-5.17-10.88-.06-.2-.37-1.2-.93-3l-22.31.17-22.31.11c.2 2.05.31 3.2.33 3.42.92 8.98 3.54 18.67 7.18 26.5 1.42 2.94 5.39 10.07 6.26 11.16.22.27 1.47 1.9 2.78 3.54 3.91 5.06 10.99 11.7 17.79 16.65 3.26 2.39 13.28 8.38 13.98 8.38.28 0 1.36.49 2.4 1.03 1.85.98 9.09 3.43 14.36 4.9 3.38.93 10.23 1.69 15.02 1.69h4.3v35.37h40.81l.11-18.07.17-18.12c2.77-.2 4.31-.3 4.62-.33 6.59-.49 18.56-3.15 23.4-5.22.44-.16.98-.38 1.2-.38.16-.06.54-.22.76-.44.22-.27.71-.43 1.09-.43.87 0 8.81-3.81 13.55-6.48 2.12-1.19 4.19-2.39 4.62-2.61.44-.22 1.09-.65 1.47-.92.38-.33 1.96-1.47 3.49-2.51 3.8-2.55 12.02-9.85 14.52-12.89 1.09-1.31 2.56-3.11 3.27-3.87 1.96-2.28 7.18-10.88 8.82-14.53 5.65-12.62 7.23-26.99 4.29-39.18-.59-2.39-1.14-4.84-1.3-5.44-.38-1.52-5.99-12.79-7.18-14.36-10.51-13.83-21.88-22.31-38.53-28.52-7.51-2.77-18.94-5.17-26.94-5.55-3.15-.16-7.02-.43-8.6-.6-.18-.02-1.13-.11-2.83-.27l.11-27.32.17-27.31c1.89.06 2.94.1 3.15.11 8.38.27 19.97 5.11 24.76 10.23 3.59 3.86 5.61 8.05 5.99 12.51.02.24.11 1.42.27 3.54H211c-.13-1.24-.2-1.93-.22-2.07-.21-2.56-1.57-8.22-2.83-12.08-7.67-23.4-23.99-43.04-43.53-52.35-7.24-3.43-9.2-4.24-12.79-5.11-.27-.11-2.39-.66-4.68-1.25-2.28-.6-6.69-1.37-9.79-1.69-3.1-.33-6.1-.71-6.59-.87-.92-.27-.98-1.53-.98-15.78v-15.46H88.78v16.6c-.11 11.06-.32 16.6-.65 16.6zm.65 94.14h-3.1c-2.83-.06-4.57-.33-8.65-1.25-1.63-.39-8.6-3.22-8.93-3.6-.16-.16-.98-.7-1.9-1.14-2.94-1.52-8.22-6.96-10.12-10.45-1.74-3.21-1.85-3.75-1.85-8.59 0-3.76.32-6.04 1.09-8.38 3.04-9.09 14.63-15.3 28.73-15.51.31-.01 1.89-.03 4.73-.06v48.98zm78.74 70.79c2.51 5.06 2.62 15.29.17 19.97-4.36 8.33-17.91 14.1-33.31 14.21-.32 0-1.91.02-4.79.05v-24.38c0-13.44.17-24.59.39-24.81.21-.22 2.01-.22 3.97-.11 1.96.16 5.49.43 7.89.6 11.92.92 21.71 6.42 25.68 14.47z" id="bppC7KU4Z"/></defs><use xlink:href="#a1tFg7tV9" fill="#fff"/><use xlink:href="#a1tFg7tV9" fill-opacity="0" stroke="#000" stroke-opacity="0"/><g><use xlink:href="#bppC7KU4Z" fill="#fff"/><use xlink:href="#bppC7KU4Z" fill-opacity="0" stroke="#000" stroke-opacity="0"/></g></svg>