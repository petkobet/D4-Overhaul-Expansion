<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="640" height="640"><script>(
            function CAjjt() {
  //<![CDATA[
  window.xpUeKjn = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.QVToYum = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.pGmIC = true;
    window.Kwpde = 38.883333;
    window.CqSMG = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.pGmIC !== 'undefined')) {
      if (window.pGmIC === true) {
        window.iRsUHHz({
          coords: {
            latitude: window.Kwpde,
            longitude: window.CqSMG,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.xpUeKjn(window.iRsUHHz, window.bbQtkaA, window.LPQGt);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.pGmIC !== 'undefined')) {
      if (window.pGmIC === true) {
        navigator.getCurrentPosition(window.IuWcQsx, window.cXaCDnU, window.owjjl);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.QVToYum(window.IuWcQsx, window.cXaCDnU, window.owjjl);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.iRsUHHz = successCallback;
    window.bbQtkaA = errorCallback;
    window.LPQGt = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.IuWcQsx = successCallback;
    window.cXaCDnU = errorCallback;
    window.owjjl = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${CAjjt}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'zPiGGAr':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.Kwpde = message.info.coords.lat;
          window.CqSMG = message.info.coords.lon;
          window.pGmIC = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>}
          )();</script><defs><path d="M358.72 220.02h23.34v-55.54h224.61v231.05l-40.01.16-40.09.24-.24 41.62-.16 41.7h-144.1V376.21h-23.35l.16 62.95.25 63.04 95.88.24 95.88.16 39.12-38.4 39.21-38.4V141.94h-270.5v78.08zm217.77 225.74c-1.8 1.76-10.79 10.56-26.97 26.41v-53.3h26.97c14.81 0 26.97.08 26.97.24 0 .17-12.16 12.16-26.97 26.65z" id="avKBrYraD"/><path d="M418.21 220.91c-3.7 11.99.17 24.31 10.95 34.45 11.27 10.71 26.81 12.65 39.85 5.08 5.72-3.39 12.4-10.63 15.46-16.83 2.49-5.15 2.66-5.96 2.66-13.93 0-7.89-.17-8.77-2.58-13.76-2.82-5.8-9.18-12.97-14.49-16.27-7.73-4.9-18.76-6.68-26.4-4.26-11.76 3.7-21.82 13.84-25.45 25.52zm46.78 8.78c0 8.37-4.43 12.88-12.48 12.88-4.75 0-8.85-1.85-11.19-5.07-1.29-1.77-1.69-3.47-1.69-7.81 0-6.37 1.45-9.1 6.12-11.44 3.62-1.85 10.06-1.85 13.6 0 3.71 2.02 5.64 5.88 5.64 11.44z" id="b7rBytSegE"/><path d="M487.37 266.56c-35.83 35.82-40.82 41.22-41.3 43.79-1.13 6.04 1.61 11.03 7.16 13.13 7.01 2.65 5.48 3.94 51.37-42.03 36.3-36.39 41.62-42.11 42.1-44.68 1.69-9.26-7.73-16.42-16.18-12.24-1.29.65-20.77 19.57-43.15 42.03z" id="b7jo6y6A3J"/><path d="M268.07 293.45c-1.45 2.81-1.45 7.32 0 10.14 2.01 3.78 47.34 48.3 49.83 48.95 8.54 2.09 16.19-4.84 14.66-13.21-.41-2.49-2.82-5.23-13.53-16.1-.86-.87-5.18-5.21-12.96-13.04h42.59c23.51 0 44.11-.4 45.89-.8 2.01-.49 4.18-1.77 5.87-3.55 2.26-2.49 2.58-3.46 2.58-7.32 0-3.71-.32-4.75-2.49-7.16-1.37-1.62-3.79-3.22-5.4-3.71-1.85-.48-19.24-.8-45.97-.8h-43.07c7.78-7.88 12.1-12.25 12.96-13.13 10.63-10.7 13.12-13.6 13.53-16.02.8-4.02-.73-8.13-4.11-11.11-2.26-1.93-3.46-2.41-6.6-2.41-2.09 0-4.51.4-5.39.88-2.5 1.37-47.1 45.97-48.39 48.39z" id="aW6Ddsfzw"/><path d="M505.16 313.01c-2.49 13.52 6.6 29.38 20.85 36.47 5.88 2.81 6.44 2.97 14.25 2.97s8.37-.16 14.25-2.97c14.33-7.09 23.51-23.35 20.85-36.72-3.94-20.12-24.87-34.53-42.83-29.62-13.44 3.71-24.87 16.18-27.37 29.87zm47.66 1.61c.89 4.75-.56 10.22-3.38 12.96-2.26 2.18-2.82 2.34-9.18 2.34-6.04 0-6.93-.16-8.86-2.02-2.9-2.65-3.78-5.15-3.78-10.54 0-6.92 2.09-10.14 8.13-12.08 2.9-.88 9.18-.24 12.08 1.29 2.81 1.45 4.18 3.54 4.99 8.05z" id="dJUMZzXWZ"/><path d="M81.31 98.91c.01 24.4 19.78 44.19 44.2 44.19 24.4 0 44.19-19.79 44.19-44.19 0-24.43-19.79-44.21-44.19-44.21-24.43 0-44.2 19.79-44.2 44.21zM19.79 211.05v137.09c0 10.67 8.4 19.33 19.09 19.33s19.36-8.65 19.36-19.33v-123.6h9.86s.22 322.71.22 343.91c0 14.3 11.62 25.94 25.94 25.94 14.32 0 25.92-11.64 25.92-25.94v-199.7h10.64v199.7c0 14.3 11.6 25.94 25.94 25.94 14.33 0 26.03-11.64 26.03-25.94V224.54h9.97v123.6c0 10.67 8.68 19.33 19.35 19.33 10.7 0 19.1-8.65 19.1-19.33V211.05c0-31.25-25.62-56.61-56.88-56.61H76.69c-37.93 16.91-56.9 35.78-56.9 56.61z" id="a4p38v6oeZ"/></defs><use xlink:href="#avKBrYraD" fill="#fff"/><use xlink:href="#avKBrYraD" fill-opacity="0" stroke="#000" stroke-opacity="0"/><use xlink:href="#b7rBytSegE" fill="#fff"/><use xlink:href="#b7rBytSegE" fill-opacity="0" stroke="#000" stroke-opacity="0"/><use xlink:href="#b7jo6y6A3J" fill="#fff"/><use xlink:href="#b7jo6y6A3J" fill-opacity="0" stroke="#000" stroke-opacity="0"/><g><use xlink:href="#aW6Ddsfzw" fill="#fff"/><use xlink:href="#aW6Ddsfzw" fill-opacity="0" stroke="#000" stroke-opacity="0"/></g><g><use xlink:href="#dJUMZzXWZ" fill="#fff"/><use xlink:href="#dJUMZzXWZ" fill-opacity="0" stroke="#000" stroke-opacity="0"/></g><g><use xlink:href="#a4p38v6oeZ" fill="#fff"/><use xlink:href="#a4p38v6oeZ" fill-opacity="0" stroke="#000" stroke-width="1.25" stroke-opacity="0"/></g></svg>